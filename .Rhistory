DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
head(DT)
plot(y[,1], y[,2], type="l", xlab="Interval", ylab="Number of steps")
mean(x[,2]) # mean
mean(x[,2]) # mean
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
mean(x[,2]) # mean
median(x[,2]) # median
x <- aggregate(DT2$steps, by=list(DT2$date), FUN=sum)
mean(x[,2])
median(x[,2])
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
?weekdays
x <- "2012-02-02"
x
class(x)
x <- as.Date("2012-02-02")
class(x)
x
weekdays(x)
weekdays(.leap.seconds)
month(s)
month(x)
months(x)
weekdays(x, abb=TURE)
weekdays(x, abb=TRUE)
weekdays(x, ab=TRUE)
colnames(DT)
DT$date <- as.Date(DT$date)
DT <- read.csv("activity.csv")
DT$date <- as.Date(DT$date)
DT2 <- na.omit(DT)
View(DT2)
x <- aggregate(DT2$steps, by=list(DT2$date), FUN=sum)
hist1 <- hist(x[,2], main="Number of steps taken per day", xlab = "Number of steps")
mean(x[,2])
median(x[,2])
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=sum)
names(y) <- c("Interval", "Number of steps")
colnames(y)
names(y) <- c("Interval", "Numsteps")
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
subset(y$Interval, y$Numsteps==max(y$Numsteps))
weekdays(x, abbreviate=1)
x <- as.Date("2012-02-02")
class(x)
x
weekdays(x, abbreviate=1)
weekdays(x, abbreviate=2)
weekdays(x, abbreviate=0)
weekdays(x, abbreviate=10)
?weekend
??weekend
is.weekend(x)
is.holiday(x)
library("chron", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
is.weekend(x)
x <- as.Date("2012-02-04")
is.holiday(x)
is.weekend(x)
for (i in 1:maxrow) {DT[i,4] <-
if (is.weekend(DT[i,2])){"weekend"}
else {"weekday"}
}
View(DT)
View(DT)
DT[,4]
colnames(DT)
colnames(DT[,4])
colnames(DT[4])
colnames(DT[4]) <- "weekend"
colnames(DT)
namelist <- colnames(DT)
namelist
colnames(DT) <- c(colnames(DT[1]),colnames(DT[2]), colnames(DT[3]), "weekend")
colnames(DT)
colnames(DT[4]) <- "weekends"
colnames(DT)
qplot(DT[,1], DT[,3], data=DT, geom = "line")
library(ggplot2)
qplot(DT[,1], DT[,3], data=DT, geom = "line")
DT$steps
x <- sapply(DT, function(x) sum(is.na(x)))
z <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
maxrow <- nrow(DT)
# Fill average steps by interval into blank cells
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
# Make histogram from new dataset
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
mean(x[,2]) # mean
median(x[,2]) # median
dev.off()
library(chron) #Call chron package to use is.weekend(x)
maxrow <- nrow(DT)
for (i in 1:maxrow) {DT[i,4] <-
if (is.weekend(DT[i,2])){"weekend"}
else {"weekday"}
}
colnames(DT) <- c(colnames(DT[1]),colnames(DT[2]), colnames(DT[3]), "weekend")
head(DT,1)
library(ggplot2)
DT$steps
library(ggplot2)
qplot(DT[,1], DT[,3], data=DT, geom = "line")
plot(DT[,1], DT[,3], type="l")
p1 <- ggplot(DT, aes(x=DT[,1], y=DT[,3])) + geom_line()
p1 + facet_wrap(~ weenend)
qplot(DT[,1], DT[,3], data=DT, facets = .~ weekend)
qplot(DT[,1], DT[,3], data=DT, facets = .~ weekend, xlab="Interval", ylab="Number of steps")
?lattice
??lattice
library(markdown)
qplot(DT[,1], DT[,3], data=DT, facets = .~ weekend, xlab="Interval", ylab="Number of steps")
?xyplot
?aggregate
?subset
DTends <- subset(DT, DT$weekend=="weekend")
DTends
head(DTends)
DTday <- subset(DT, DT$weekend=="weekeday")
head(DTday)
DTday <- subset(DT, DT$weekend=="weekday")
head(DTday)
z1 <- aggregate(DT2$steps, by=list(DT2$interval), FUN=sum)
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=sum)
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=sum)
DTend <- subset(DT, DT$weekend=="weekend")
DTday <- subset(DT, DT$weekend=="weekday")
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=sum)
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=sum)
z1
z2
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
```{r, echo=TRUE}
# Set working directory
setwd("/Users/koo7604/Desktop/R/Johns_Hopkins/ReproducibleResearch/week2/RepData_PeerAssessment1")
# Load packages
library(knitr)
library(markdown)
# Load the data
DT <- read.csv("activity.csv")
# Remove NA records
DT$date <- as.Date(DT$date)
DT2 <- na.omit(DT)
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
# Aggregate step by each day
x <- aggregate(DT2$steps, by=list(DT2$date), FUN=sum)
# Make histogram
hist1 <- hist(x[,2], main="Number of steps taken per day", xlab = "Number of steps")
# Calculate mean and median
mean(x[,2])
median(x[,2])
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
# Aggregate step by each interval
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=sum)
names(y) <- c("Interval", "Numsteps")
# Make line plot
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
subset(y$Interval, y$Numsteps==max(y$Numsteps))
```
## Imputing missing values
```{r, echo=TRUE}
x <- sapply(DT, function(x) sum(is.na(x)))
z <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
maxrow <- nrow(DT)
# Fill average steps by interval into blank cells
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
# Make histogram from new dataset
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
mean(x[,2]) # mean
median(x[,2]) # median
```
### Mean is the same but median differ from the estimates from the first part. Median and mean become same here.
## Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
2. Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). The plot should look something like the following, which was creating using simulated data:
library(chron) #Call chron package to use is.weekend(x)
maxrow <- nrow(DT)
for (i in 1:maxrow) {DT[i,4] <-
if (is.weekend(DT[i,2])){"weekend"}
else {"weekday"}
}
colnames(DT) <- c(colnames(DT[1]),colnames(DT[2]), colnames(DT[3]), "weekend")
DTend <- subset(DT, DT$weekend=="weekend")
DTday <- subset(DT, DT$weekend=="weekday")
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=sum)
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=sum)
library(ggplot2)
qplot(DT[,1], DT[,3], data=DT, geom = "line")
plot(DT[,1], DT[,3], type="l")
p1 <- ggplot(DT, aes(x=DT[,1], y=DT[,3])) + geom_line()
p1 + facet_wrap(~ weenend)
qplot(DT[,1], DT[,3], data=DT, facets = .~ weekend, xlab="Interval", ylab="Number of steps")
```
z1
z2
setwd("/Users/koo7604/Desktop/R/Johns_Hopkins/ReproducibleResearch/week2/RepData_PeerAssessment1")
library(knitr)
library(markdown)
DT <- read.csv("activity.csv")
DT$date <- as.Date(DT$date)
DT2 <- na.omit(DT)
x <- aggregate(DT2$steps, by=list(DT2$date), FUN=sum)
x
hist1 <- hist(x[,2], main="Number of steps taken per day", xlab = "Number of steps")
mean(x[,2])
median(x[,2])
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=sum)
y
names(y) <- c("Interval", "Numsteps")
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
subset(y$Interval, y$Numsteps==max(y$Numsteps))
x <- sapply(DT, function(x) sum(is.na(x)))
z <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
maxrow <- nrow(DT)
z
maxrow <- nrow(DT)
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
head(DT)
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
x
x <- aggregate(DT$steps, by=list(DT$interval), FUN=sum)
x
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
mean(x[,2]) # mean
median(x[,2]) # median
library(chron) #Call chron package to use is.weekend(x)
maxrow <- nrow(DT)
for (i in 1:maxrow) {DT[i,4] <-
if (is.weekend(DT[i,2])){"weekend"}
else {"weekday"}
}
DTend <- subset(DT, DT$weekend=="weekend")
DTday <- subset(DT, DT$weekend=="weekday")
View(DTday)
View(DTends)
View(DT)
colnames(DT) <- c(colnames(DT[1]),colnames(DT[2]), colnames(DT[3]), "weekend")
DTend <- subset(DT, DT$weekend=="weekend")
DTday <- subset(DT, DT$weekend=="weekday")
View(DTend)
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=sum)
View(`z1`)
View(`z2`)
1.013019e+02
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=sum)
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?densityplot
xyplot(EuStockMarkets, screens = c(rep("Continental", 3), "UK"))
EuStockMarkets
head(EuStockMarkets)
xyplot(DT, screens=c("weekend", "weekday"))
library(lattice)
xyplot(DT, screens=c("weekend", "weekday"))
class(EuStockMarkets)
DT2 <- data.matrix(DT)
head(DT2)
head(DT)
head(z1)
head(z2)
colnames(z1) <- c("interval", "avenumsteps")
head(z1)
colnames(z2) <- c("interval", "avenumsteps")
class(z1)
z <- cbind(z1, z2$avenumsteps)
z
colnames(z) <- c("interval", "weekend", "weekday")
z
DT3 <- data.matrix(z)
DT3
xyplot(DT3, screens=c("weekend", "weekday"))
class(DT3)
DT4 <- as.ts(DT3, start = 0, frequency = 5)
Dt4
DT4
class(DT4)
xyplot(DT4, screens=c("weekend", "weekday"))
DT4 <- as.ts(DT3[,2:3], start = 0, frequency = 5)
xyplot(DT4, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=sum)
setwd("/Users/koo7604/Desktop/R/Johns_Hopkins/ReproducibleResearch/week2/RepData_PeerAssessment1")
library(knitr)
library(markdown)
DT <- read.csv("activity.csv")
DT$date <- as.Date(DT$date)
DT2 <- na.omit(DT)
x <- aggregate(DT2$steps, by=list(DT2$date), FUN=sum)
hist1 <- hist(x[,2], main="Number of steps taken per day", xlab = "Number of steps")
mean(x[,2])
median(x[,2])
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=sum)
names(y) <- c("Interval", "Numsteps")
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
names(y) <- c("Interval", "Numsteps")
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
subset(y$Interval, y$Numsteps==max(y$Numsteps))
x <- sapply(DT, function(x) sum(is.na(x)))
z <- aggregate(DT2$steps, by=list(DT2$interval), FUN=median)
maxrow <- nrow(DT)
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
mean(x[,2]) # mean
median(x[,2]) # median
x <- sapply(DT, function(x) sum(is.na(x)))
z <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
maxrow <- nrow(DT)
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
DT <- read.csv("activity.csv")
DT$date <- as.Date(DT$date)
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
mean(x[,2]) # mean
median(x[,2]) # median
library(chron) #Call chron package to use is.weekend(x)
maxrow <- nrow(DT)
for (i in 1:maxrow) {DT[i,4] <-
if (is.weekend(DT[i,2])){"weekend"}
else {"weekday"}
}
colnames(DT) <- c(colnames(DT[1]),colnames(DT[2]), colnames(DT[3]), "weekend")
DTend <- subset(DT, DT$weekend=="weekend")
DTday <- subset(DT, DT$weekend=="weekday")
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=sum)
colnames(z1) <- c("interval", "avenumsteps")
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=sum)
colnames(z2) <- c("interval", "avenumsteps")
z <- cbind(z1, z2$avenumsteps)
colnames(z) <- c("interval", "weekend", "weekday")
xaxisscale <- z$interval
xaxisscale
DT3 <- as.ts(DT3[,2:3], start = 0, frequency = 5)
xyplot(DT4, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=mean)
colnames(z1) <- c("interval", "avenumsteps")
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=mean)
colnames(z2) <- c("interval", "avenumsteps")
z <- cbind(z1, z2$avenumsteps)
colnames(z) <- c("interval", "weekend", "weekday")
xaxisscale <- z$interval
DT3 <- as.ts(DT3[,2:3], start = 0, frequency = 5)
library(lattice)
xyplot(DT4, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
library(lattice)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=mean)
colnames(z1) <- c("interval", "avenumsteps")
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=mean)
colnames(z2) <- c("interval", "avenumsteps")
z <- cbind(z1, z2$avenumsteps)
colnames(z) <- c("interval", "weekend", "weekday")
xaxisscale <- z$interval
DT3 <- as.ts(DT3[,2:3], start = 0, frequency = 5)
library(lattice)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
DT3 <- as.ts(DT[,2:3], start = 0, frequency = 5)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
DT3 <- as.ts(DT[,2:3])
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
DT3 <- as.ts(z[,2:3])
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(tick.number=5)))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(tick.number=5)))
dev.off()
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(tick.number=5)))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(z$interval)))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(labels = z$interval)))
dev.off()
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(labels = z$interval)))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
xyplot(DT3~z$interval, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
, scale.list=(x=list(labels = z$interval))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(labels = z$interval)))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", xlim=c(5, 2880,5))
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", xlim=z$date)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
xyplot(EuStockMarkets, screens = c(rep("Continental", 3), "UK"))
EuStockMarkets
head(EuStockMarkets)
str(EuStockMarkets)
colnames(EuStockMarkets)
xyplot(ts(c(1:10,10:1)))
xyplot(EuStockMarkets, screens = c(rep("Continental", 3), "UK"))
DT3 <- as.ts(z[,2:3], start=5, frequency = 5)
w
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
DT3 <- ts(z[,2:3], start=5, frequency = 5)
DT3
DT3 <- ts(z[,2:3], start=5, frequency = 1)
DT3
DT3 <- ts(z[,2:3], start=5, frequency = 0.2)
DT3
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
DT
tail(DT)
tail(z)
DT3 <- ts(z[,2:3], start=0, frequency = 0.2)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
z
DT <- read.csv("activity.csv")
DT[,1]
DT[,3]
?xyplot
DT$date <- as.Date(DT$date)
DT2 <- na.omit(DT)
x <- aggregate(DT2$steps, by=list(DT2$date), FUN=sum)
hist1 <- hist(x[,2], main="Number of steps taken per day", xlab = "Number of steps")
mean(x[,2])
median(x[,2])
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
names(y) <- c("Interval", "Numsteps")
# Make line plot
plot(y$Interval, y$Numsteps, type="l", xlab="Interval", ylab="Number of steps")
subset(y$Interval, y$Numsteps==max(y$Numsteps))
plot(y$interval, y$numsteps, type="l", xlab="Interval", ylab="Number of steps")
y <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
names(y) <- c("interval", "numsteps")
plot(y$interval, y$numsteps, type="l", xlab="Interval", ylab="Number of steps")
x <- sapply(DT, function(x) sum(is.na(x)))
z <- aggregate(DT2$steps, by=list(DT2$interval), FUN=mean)
maxrow <- nrow(DT)
for (i in 1:maxrow){
if (is.na(DT[i,1])){
DT[i,1] <- subset(z[,2], z[,1]==DT[i,3])
}
}
x <- aggregate(DT$steps, by=list(DT$date), FUN=sum)
hist2 <- hist(x[,2], main="Number of steps taken per day 2", xlab = "Number of steps")
mean(x[,2]) # mean
median(x[,2]) # median
library(chron) #Call chron package to use is.weekend(x)
maxrow <- nrow(DT)
for (i in 1:maxrow) {DT[i,4] <-
if (is.weekend(DT[i,2])){"weekend"}
else {"weekday"}
}
colnames(DT) <- c(colnames(DT[1]),colnames(DT[2]), colnames(DT[3]), "weekend")
DTend <- subset(DT, DT$weekend=="weekend")
DTday <- subset(DT, DT$weekend=="weekday")
z1 <- aggregate(DTend$steps, by=list(DTend$interval), FUN=mean)
colnames(z1) <- c("interval", "avenumsteps")
z2 <- aggregate(DTday$steps, by=list(DTday$interval), FUN=mean)
colnames(z2) <- c("interval", "avenumsteps")
z <- cbind(z1, z2$avenumsteps)
colnames(z) <- c("interval", "weekend", "weekday")
xaxisscale <- z$interval
DT3 <- ts(z[,2:3], start=0, frequency = 0.2)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
ts(1:24, start=c(1990, 2), frequency=4)
DT3 <- ts(z[,2:3], start=0, frequency = 12)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
DT3
DT3 <- ts(z, start=0, frequency = 12)
xyplot(DT3, screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
xyplot(DT3[,2:3], screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps")
xyplot(DT3[,2:3], screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(z[,1])))
DT3
DT3 <- ts(z, start=0, frequency = 11)
DT3 <- ts(z, start=0, frequency = 1)
xyplot(DT3[,2:3], screens=c("weekend", "weekday"), xlab = "Interval", ylab = "Number of steps", scale.list=(x=list(z[,1])))
DT3
DT3 <- ts(z, start=1, frequency = 1)
DT3
max(z$interval)
DTts <- ts(numeric(), start=0, end = 2355, frequency = 1)
qqq <- numeric(2355)
DTts <- ts(qqq, start=0, end = 2355, frequency = 1)
DTts
DTts[1,1]
DTts[1]
q()
